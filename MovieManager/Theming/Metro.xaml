<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:sys="clr-namespace:System;assembly=mscorlib"
                    xmlns:ed="http://schemas.microsoft.com/expression/2010/drawing" xmlns:d="http://schemas.microsoft.com/expression/blend/2008" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" mc:Ignorable="d">

    <sys:String x:Key="AppName">Moviemanager</sys:String>
    <SolidColorBrush x:Key="PageBackgroundBrush" Color="#FF0C0C0C"/>
    <SolidColorBrush x:Key="PageForegroundBrush" Color="White"/>

    <SolidColorBrush x:Key="TabItemSelectedBrush" Color="White"/>
    <SolidColorBrush x:Key="TabItemUnselectedBrush" Color="#FFCCCCCC"/>
    <SolidColorBrush x:Key="TabItemMouseOverBrush" Color="#FFE0E0E0"/>

    <SolidColorBrush x:Key="HighlightBrush" Color="#FF26A0DA"/>
    <SolidColorBrush x:Key="ComboBoxBrush" Color="#FFC0C0C0" />
	
	<SolidColorBrush x:Key="SliderIncreaseBackground" Color="Gray" />

    <!-- Common Control Resources -->

    <!--These common resources should be included in generic.xaml for the default dark theme-->
    <FontFamily x:Key="ContentFontFamily">Segoe UI</FontFamily>
    <FontFamily x:Key="SemiBoldContentFontFamily">Segoe UI SemiBold</FontFamily>
    <FontFamily x:Key="SemiLightContentFontFamily">Segoe UI Semilight</FontFamily>
    <FontFamily x:Key="LightContentFontFamily">Segoe UI Light</FontFamily>

    <sys:Double x:Key="HeaderMediumFontSize">26.667</sys:Double>
    <sys:Double x:Key="HeaderLargeFontSize">56</sys:Double>
    <sys:Double x:Key="ContentFontSize">14.667</sys:Double>
    <sys:Double x:Key="ContentSubHeaderFontSize">12</sys:Double>

    <Thickness x:Key="ControlBorderThickness">2</Thickness>
    <CornerRadius x:Key="ControlBorderRadius">0</CornerRadius>
    <SolidColorBrush x:Key="ControlTextColor" Color="White"/>
    <SolidColorBrush x:Key="ControlHeaderColor" Color="#FFFFFFFF"/>

    <SolidColorBrush x:Key="PlaceholderImageBrush" Color="Gray"/>
    <SolidColorBrush x:Key="TileImageBrush" Color="#548D8D8D"/>

    <!-- LayoutRoot Grid Style -->
    <Style x:Key="LayoutRootGridStyle" TargetType="{x:Type Grid}">
        <Setter Property="Background" Value="{StaticResource PageBackgroundBrush}"/>
    </Style>

    <!-- TextBlock Styles -->
    <Style x:Key="DefaultFontStyle" TargetType="{x:Type TextBlock}">
        <Setter Property="Foreground" Value="White"/>
        <Setter Property="FontSize" Value="26.667"/>
        <Setter Property="FontFamily" Value="Segoe UI"/>
        <Setter Property="FontWeight" Value="Light"/>
        <Setter Property="Margin" Value="0,0,0,0"/>
        <Setter Property="TextTrimming" Value="WordEllipsis"/>
        <Setter Property="TextWrapping" Value="Wrap"/>
    </Style>
    <Style x:Key="LargeContentFontStyle" TargetType="{x:Type TextBlock}" BasedOn="{StaticResource DefaultFontStyle}"/>
    <Style x:Key="SmallContentFontStyle" TargetType="{x:Type TextBlock}" BasedOn="{StaticResource DefaultFontStyle}">
        <Setter Property="FontSize" Value="14.667"/>
    </Style>
    <Style x:Key="ReadingFontStyle" TargetType="{x:Type TextBlock}" BasedOn="{StaticResource DefaultFontStyle}">
        <Setter Property="FontFamily" Value="Calibri"/>
        <Setter Property="FontSize" Value="14.667"/>
    </Style>

    <!-- Label Styles -->
    <Style x:Key="DefaultLabelFontStyle" TargetType="{x:Type Label}">
        <Setter Property="Foreground" Value="White"/>
        <Setter Property="FontSize" Value="26.667"/>
        <Setter Property="FontFamily" Value="Segoe UI"/>
        <Setter Property="FontWeight" Value="Light"/>
        <Setter Property="Margin" Value="0,0,0,0"/>
    </Style>
    <Style x:Key="LabelDescriptionFontStyle" TargetType="{x:Type Label}" BasedOn="{StaticResource DefaultLabelFontStyle}">
        <Setter Property="FontSize" Value="15"/>
    </Style>

    <!-- General Styles -->
    <Style x:Key="HorizontalScrollBar" TargetType="{x:Type ScrollBar}">
        <Setter Property="Orientation" Value="Horizontal" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate>
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition Width="*" />
                            <ColumnDefinition Width="Auto" />
                        </Grid.ColumnDefinitions>
                        <RepeatButton Command="ScrollBar.LineLeftCommand">
                            <RepeatButton.Style>
                                <Style TargetType="{x:Type RepeatButton}">
                                    <Setter Property="Background" Value="White" />
                                    <Setter Property="Template">
                                        <Setter.Value>
                                            <ControlTemplate>
                                                <Grid>
                                                    <ed:RegularPolygon Fill="{TemplateBinding Background}" Height="7" InnerRadius="11" PointCount="3" Stretch="Fill" Width="7" RenderTransformOrigin="0.5,0.5">
                                                        <ed:RegularPolygon.RenderTransform>
                                                            <TransformGroup>
                                                                <ScaleTransform/>
                                                                <SkewTransform/>
                                                                <RotateTransform Angle="-90"/>
                                                                <TranslateTransform/>
                                                            </TransformGroup>
                                                        </ed:RegularPolygon.RenderTransform>
                                                    </ed:RegularPolygon>
                                                </Grid>
                                            </ControlTemplate>
                                        </Setter.Value>
                                    </Setter>
                                    <Style.Triggers>
                                        <Trigger Property="IsMouseOver" Value="True">
                                            <Setter Property="Background" Value="Gray" />
                                        </Trigger>
                                        <Trigger Property="IsPressed" Value="True">
                                            <Setter Property="Background" Value="{StaticResource HighlightBrush}" />
                                        </Trigger>
                                    </Style.Triggers>
                                </Style>
                            </RepeatButton.Style>
                        </RepeatButton>
                        <Track x:Name="PART_Track" Grid.Column="1" Margin="5">
                            <Track.DecreaseRepeatButton>
                                <RepeatButton Command="ScrollBar.LineLeftCommand" Background="#00FFFFFF">
                                    <RepeatButton.Style>
                                        <Style TargetType="{x:Type RepeatButton}">
                                            <Setter Property="Template">
                                                <Setter.Value>
                                                    <ControlTemplate>
                                                        <Rectangle Fill="{TemplateBinding Background}" />
                                                    </ControlTemplate>
                                                </Setter.Value>
                                            </Setter>
                                        </Style>
                                    </RepeatButton.Style>
                                </RepeatButton>
                            </Track.DecreaseRepeatButton>
                            <Track.Thumb>
                                <Thumb>
                                    <Thumb.Style>
                                        <Style TargetType="{x:Type Thumb}">
                                            <Setter Property="Background" Value="White" />
                                            <Setter Property="Template">
                                                <Setter.Value>
                                                    <ControlTemplate>
                                                        <Rectangle Fill="{TemplateBinding Background}" />
                                                    </ControlTemplate>
                                                </Setter.Value>
                                            </Setter>
                                            <Style.Triggers>
                                                <Trigger Property="IsMouseOver" Value="True">
                                                    <Setter Property="Background" Value="Gray" />
                                                </Trigger>
                                                <Trigger Property="IsDragging" Value="True">
                                                    <Setter Property="Background" Value="{StaticResource HighlightBrush}" />
                                                </Trigger>
                                            </Style.Triggers>
                                        </Style>
                                    </Thumb.Style>
                                </Thumb>
                            </Track.Thumb>
                            <Track.IncreaseRepeatButton>
                                <RepeatButton Command="ScrollBar.LineRightCommand" Background="#00FFFFFF">
                                    <RepeatButton.Style>
                                        <Style TargetType="{x:Type RepeatButton}">
                                            <Setter Property="Template">
                                                <Setter.Value>
                                                    <ControlTemplate>
                                                        <Rectangle Fill="{TemplateBinding Background}" />
                                                    </ControlTemplate>
                                                </Setter.Value>
                                            </Setter>
                                        </Style>
                                    </RepeatButton.Style>
                                </RepeatButton>
                            </Track.IncreaseRepeatButton>
                        </Track>
                        <RepeatButton Command="ScrollBar.LineRightCommand" Grid.Column="2">
                            <RepeatButton.Style>
                                <Style TargetType="{x:Type RepeatButton}">
                                    <Setter Property="Background" Value="White" />
                                    <Setter Property="Template">
                                        <Setter.Value>
                                            <ControlTemplate>
                                                <Grid>
                                                    <ed:RegularPolygon Fill="{TemplateBinding Background}" Height="7" InnerRadius="11" PointCount="3" Stretch="Fill" Width="7" RenderTransformOrigin="0.5,0.5">
                                                        <ed:RegularPolygon.RenderTransform>
                                                            <TransformGroup>
                                                                <ScaleTransform/>
                                                                <SkewTransform/>
                                                                <RotateTransform Angle="90"/>
                                                                <TranslateTransform/>
                                                            </TransformGroup>
                                                        </ed:RegularPolygon.RenderTransform>
                                                    </ed:RegularPolygon>
                                                </Grid>
                                            </ControlTemplate>
                                        </Setter.Value>
                                    </Setter>
                                    <Style.Triggers>
                                        <Trigger Property="IsMouseOver" Value="True">
                                            <Setter Property="Background" Value="Gray" />
                                        </Trigger>
                                        <Trigger Property="IsPressed" Value="True">
                                            <Setter Property="Background" Value="{StaticResource HighlightBrush}" />
                                        </Trigger>
                                    </Style.Triggers>
                                </Style>
                            </RepeatButton.Style>
                        </RepeatButton>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="VerticalScrollBar" TargetType="{x:Type ScrollBar}">
        <Setter Property="Orientation" Value="Vertical" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate>
                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="*" />
                            <RowDefinition Height="Auto" />
                        </Grid.RowDefinitions>
                        <RepeatButton Command="ScrollBar.LineUpCommand">
                            <RepeatButton.Style>
                                <Style TargetType="{x:Type RepeatButton}">
                                    <Setter Property="Background" Value="White" />
                                    <Setter Property="Template">
                                        <Setter.Value>
                                            <ControlTemplate>
                                                <Grid>
                                                    <ed:RegularPolygon Fill="{TemplateBinding Background}" Height="7" InnerRadius="11" PointCount="3" Stretch="Fill" Width="7" RenderTransformOrigin="0.5,0.5"/>
                                                </Grid>
                                            </ControlTemplate>
                                        </Setter.Value>
                                    </Setter>
                                    <Style.Triggers>
                                        <Trigger Property="IsMouseOver" Value="True">
                                            <Setter Property="Background" Value="Gray" />
                                        </Trigger>
                                        <Trigger Property="IsPressed" Value="True">
                                            <Setter Property="Background" Value="{StaticResource HighlightBrush}" />
                                        </Trigger>
                                    </Style.Triggers>
                                </Style>
                            </RepeatButton.Style>
                        </RepeatButton>
                        <Track x:Name="PART_Track" Grid.Row="1" Margin="5" RenderTransformOrigin="0.5,0.5">
                            <Track.DecreaseRepeatButton>
                                <RepeatButton Command="ScrollBar.LineUpCommand" Background="#00FFFFFF">
                                    <RepeatButton.Style>
                                        <Style TargetType="{x:Type RepeatButton}">
                                            <Setter Property="Template">
                                                <Setter.Value>
                                                    <ControlTemplate>
                                                        <Rectangle Fill="{TemplateBinding Background}" />
                                                    </ControlTemplate>
                                                </Setter.Value>
                                            </Setter>
                                        </Style>
                                    </RepeatButton.Style>
                                </RepeatButton>
                            </Track.DecreaseRepeatButton>
                            <Track.Thumb>
                                <Thumb>
                                    <Thumb.Style>
                                        <Style TargetType="{x:Type Thumb}">
                                            <Setter Property="Background" Value="White" />
                                            <Setter Property="Template">
                                                <Setter.Value>
                                                    <ControlTemplate>
                                                        <Rectangle Fill="{TemplateBinding Background}" />
                                                    </ControlTemplate>
                                                </Setter.Value>
                                            </Setter>
                                            <Style.Triggers>
                                                <Trigger Property="IsMouseOver" Value="True">
                                                    <Setter Property="Background" Value="Gray" />
                                                </Trigger>
                                                <Trigger Property="IsDragging" Value="True">
                                                    <Setter Property="Background" Value="{StaticResource HighlightBrush}" />
                                                </Trigger>
                                            </Style.Triggers>
                                        </Style>
                                    </Thumb.Style>
                                </Thumb>
                            </Track.Thumb>
                            <Track.IncreaseRepeatButton>
                                <RepeatButton Command="ScrollBar.LineDownCommand" Background="#00FFFFFF">
                                    <RepeatButton.Style>
                                        <Style TargetType="{x:Type RepeatButton}">
                                            <Setter Property="Template">
                                                <Setter.Value>
                                                    <ControlTemplate>
                                                        <Rectangle Fill="{TemplateBinding Background}" />
                                                    </ControlTemplate>
                                                </Setter.Value>
                                            </Setter>
                                        </Style>
                                    </RepeatButton.Style>
                                </RepeatButton>
                            </Track.IncreaseRepeatButton>
                            <Track.RenderTransform>
                                <RotateTransform Angle="180" />
                            </Track.RenderTransform>
                        </Track>
                        <RepeatButton Command="ScrollBar.LineDownCommand" Grid.Row="2">
                            <RepeatButton.Style>
                                <Style TargetType="{x:Type RepeatButton}">
                                    <Setter Property="Background" Value="White" />
                                    <Setter Property="Template">
                                        <Setter.Value>
                                            <ControlTemplate>
                                                <Grid>
                                                    <ed:RegularPolygon Fill="{TemplateBinding Background}" Height="7" InnerRadius="11" PointCount="3" Stretch="Fill" Width="7" RenderTransformOrigin="0.5,0.5">
                                                        <ed:RegularPolygon.RenderTransform>
                                                            <TransformGroup>
                                                                <ScaleTransform/>
                                                                <SkewTransform/>
                                                                <RotateTransform Angle="180"/>
                                                                <TranslateTransform/>
                                                            </TransformGroup>
                                                        </ed:RegularPolygon.RenderTransform>
                                                    </ed:RegularPolygon>
                                                </Grid>
                                            </ControlTemplate>
                                        </Setter.Value>
                                    </Setter>
                                    <Style.Triggers>
                                        <Trigger Property="IsMouseOver" Value="True">
                                            <Setter Property="Background" Value="Gray" />
                                        </Trigger>
                                        <Trigger Property="IsPressed" Value="True">
                                            <Setter Property="Background" Value="{StaticResource HighlightBrush}" />
                                        </Trigger>
                                    </Style.Triggers>
                                </Style>
                            </RepeatButton.Style>
                        </RepeatButton>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style TargetType="{x:Type Button}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border Width="{TemplateBinding Width}" Height="{TemplateBinding Height}" BorderBrush="White" BorderThickness="5">
                        <Grid x:Name="gridContent" Background="{TemplateBinding Background}">
                            <TextBlock Margin="2,0" x:Name="textContent" FontFamily="{StaticResource ContentFontFamily}" TextAlignment="Center" Text="{TemplateBinding Content}" Foreground="{TemplateBinding Foreground}" />
                        </Grid>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="Background" Value="{StaticResource PageBackgroundBrush}" />
        <Setter Property="Foreground" Value="{StaticResource PageForegroundBrush}" />
        <Setter Property="Margin" Value="2" />
        <Setter Property="Height" Value="30" />
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="Gray" />
            </Trigger>
            <Trigger Property="IsPressed" Value="True">
                <Setter Property="Background" Value="{StaticResource PageForegroundBrush}" />
                <Setter Property="Foreground" Value="{StaticResource PageBackgroundBrush}" />
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Opacity" Value="0.5" />
                <Setter Property="OpacityMask" Value="White" />
            </Trigger>
        </Style.Triggers>
    </Style>
    <Style TargetType="{x:Type ScrollBar}">
        <Style.Triggers>
            <Trigger Property="Orientation" Value="Vertical">
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate>
                            <Grid>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="Auto" />
                                    <RowDefinition Height="*" />
                                    <RowDefinition Height="Auto" />
                                </Grid.RowDefinitions>
                                <RepeatButton Command="ScrollBar.LineUpCommand">
                                    <RepeatButton.Style>
                                        <Style TargetType="{x:Type RepeatButton}">
                                            <Setter Property="Background" Value="White" />
                                            <Setter Property="Template">
                                                <Setter.Value>
                                                    <ControlTemplate>
                                                        <Grid>
                                                            <ed:RegularPolygon Fill="{TemplateBinding Background}" Height="7" InnerRadius="11" PointCount="3" Stretch="Fill" Width="7" RenderTransformOrigin="0.5,0.5"/>
                                                        </Grid>
                                                    </ControlTemplate>
                                                </Setter.Value>
                                            </Setter>
                                            <Style.Triggers>
                                                <Trigger Property="IsMouseOver" Value="True">
                                                    <Setter Property="Background" Value="Gray" />
                                                </Trigger>
                                                <Trigger Property="IsPressed" Value="True">
                                                    <Setter Property="Background" Value="{StaticResource HighlightBrush}" />
                                                </Trigger>
                                            </Style.Triggers>
                                        </Style>
                                    </RepeatButton.Style>
                                </RepeatButton>
                                <Track x:Name="PART_Track" Grid.Row="1" Margin="5">
                                    <Track.DecreaseRepeatButton>
                                        <RepeatButton Command="ScrollBar.LineUpCommand" Background="#00FFFFFF">
                                            <RepeatButton.Style>
                                                <Style TargetType="{x:Type RepeatButton}">
                                                    <Setter Property="Template">
                                                        <Setter.Value>
                                                            <ControlTemplate>
                                                                <Rectangle Fill="{TemplateBinding Background}" />
                                                            </ControlTemplate>
                                                        </Setter.Value>
                                                    </Setter>
                                                </Style>
                                            </RepeatButton.Style>
                                        </RepeatButton>
                                    </Track.DecreaseRepeatButton>
                                    <Track.Thumb>
                                        <Thumb>
                                            <Thumb.Style>
                                                <Style TargetType="{x:Type Thumb}">
                                                    <Setter Property="Background" Value="White" />
                                                    <Setter Property="Template">
                                                        <Setter.Value>
                                                            <ControlTemplate>
                                                                <Rectangle Fill="{TemplateBinding Background}" />
                                                            </ControlTemplate>
                                                        </Setter.Value>
                                                    </Setter>
                                                    <Style.Triggers>
                                                        <Trigger Property="IsMouseOver" Value="True">
                                                            <Setter Property="Background" Value="Gray" />
                                                        </Trigger>
                                                        <Trigger Property="IsDragging" Value="True">
                                                            <Setter Property="Background" Value="{StaticResource HighlightBrush}" />
                                                        </Trigger>
                                                    </Style.Triggers>
                                                </Style>
                                            </Thumb.Style>
                                        </Thumb>
                                    </Track.Thumb>
                                    <Track.IncreaseRepeatButton>
                                        <RepeatButton Command="ScrollBar.LineDownCommand" Background="#00FFFFFF">
                                            <RepeatButton.Style>
                                                <Style TargetType="{x:Type RepeatButton}">
                                                    <Setter Property="Template">
                                                        <Setter.Value>
                                                            <ControlTemplate>
                                                                <Rectangle Fill="{TemplateBinding Background}" />
                                                            </ControlTemplate>
                                                        </Setter.Value>
                                                    </Setter>
                                                </Style>
                                            </RepeatButton.Style>
                                        </RepeatButton>
                                    </Track.IncreaseRepeatButton>
                                </Track>
                                <RepeatButton Command="ScrollBar.LineDownCommand" Grid.Row="2">
                                    <RepeatButton.Style>
                                        <Style TargetType="{x:Type RepeatButton}">
                                            <Setter Property="Background" Value="White" />
                                            <Setter Property="Template">
                                                <Setter.Value>
                                                    <ControlTemplate>
                                                        <Grid>
                                                            <ed:RegularPolygon Fill="{TemplateBinding Background}" Height="7" InnerRadius="11" PointCount="3" Stretch="Fill" Width="7" RenderTransformOrigin="0.5,0.5">
                                                                <ed:RegularPolygon.RenderTransform>
                                                                    <TransformGroup>
                                                                        <ScaleTransform/>
                                                                        <SkewTransform/>
                                                                        <RotateTransform Angle="180"/>
                                                                        <TranslateTransform/>
                                                                    </TransformGroup>
                                                                </ed:RegularPolygon.RenderTransform>
                                                            </ed:RegularPolygon>
                                                        </Grid>
                                                    </ControlTemplate>
                                                </Setter.Value>
                                            </Setter>
                                            <Style.Triggers>
                                                <Trigger Property="IsMouseOver" Value="True">
                                                    <Setter Property="Background" Value="Gray" />
                                                </Trigger>
                                                <Trigger Property="IsPressed" Value="True">
                                                    <Setter Property="Background" Value="{StaticResource HighlightBrush}" />
                                                </Trigger>
                                            </Style.Triggers>
                                        </Style>
                                    </RepeatButton.Style>
                                </RepeatButton>
                            </Grid>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
                <Setter Property="Margin" Value="120,0,120,100" />
            </Trigger>
            <Trigger Property="Orientation" Value="Horizontal">
                <Setter Property="Margin" Value="120,0,120,100" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate>
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto" />
                                    <ColumnDefinition Width="*" />
                                    <ColumnDefinition Width="Auto" />
                                </Grid.ColumnDefinitions>
                                <RepeatButton Command="ScrollBar.LineLeftCommand">
                                    <RepeatButton.Style>
                                        <Style TargetType="{x:Type RepeatButton}">
                                            <Setter Property="Background" Value="White" />
                                            <Setter Property="Template">
                                                <Setter.Value>
                                                    <ControlTemplate>
                                                        <Grid>
                                                            <ed:RegularPolygon Fill="{TemplateBinding Background}" Height="7" InnerRadius="11" PointCount="3" Stretch="Fill" Width="7" RenderTransformOrigin="0.5,0.5">
                                                                <ed:RegularPolygon.RenderTransform>
                                                                    <TransformGroup>
                                                                        <ScaleTransform/>
                                                                        <SkewTransform/>
                                                                        <RotateTransform Angle="-90"/>
                                                                        <TranslateTransform/>
                                                                    </TransformGroup>
                                                                </ed:RegularPolygon.RenderTransform>
                                                            </ed:RegularPolygon>
                                                        </Grid>
                                                    </ControlTemplate>
                                                </Setter.Value>
                                            </Setter>
                                            <Style.Triggers>
                                                <Trigger Property="IsMouseOver" Value="True">
                                                    <Setter Property="Background" Value="Gray" />
                                                </Trigger>
                                                <Trigger Property="IsPressed" Value="True">
                                                    <Setter Property="Background" Value="{StaticResource HighlightBrush}" />
                                                </Trigger>
                                            </Style.Triggers>
                                        </Style>
                                    </RepeatButton.Style>
                                </RepeatButton>
                                <Track x:Name="PART_Track" Grid.Column="1" Margin="5">
                                    <Track.DecreaseRepeatButton>
                                        <RepeatButton Command="ScrollBar.LineLeftCommand" Background="#00FFFFFF">
                                            <RepeatButton.Style>
                                                <Style TargetType="{x:Type RepeatButton}">
                                                    <Setter Property="Template">
                                                        <Setter.Value>
                                                            <ControlTemplate>
                                                                <Rectangle Fill="{TemplateBinding Background}" />
                                                            </ControlTemplate>
                                                        </Setter.Value>
                                                    </Setter>
                                                </Style>
                                            </RepeatButton.Style>
                                        </RepeatButton>
                                    </Track.DecreaseRepeatButton>
                                    <Track.Thumb>
                                        <Thumb>
                                            <Thumb.Style>
                                                <Style TargetType="{x:Type Thumb}">
                                                    <Setter Property="Background" Value="White" />
                                                    <Setter Property="Template">
                                                        <Setter.Value>
                                                            <ControlTemplate>
                                                                <Rectangle Fill="{TemplateBinding Background}" />
                                                            </ControlTemplate>
                                                        </Setter.Value>
                                                    </Setter>
                                                    <Style.Triggers>
                                                        <Trigger Property="IsMouseOver" Value="True">
                                                            <Setter Property="Background" Value="Gray" />
                                                        </Trigger>
                                                        <Trigger Property="IsDragging" Value="True">
                                                            <Setter Property="Background" Value="{StaticResource HighlightBrush}" />
                                                        </Trigger>
                                                    </Style.Triggers>
                                                </Style>
                                            </Thumb.Style>
                                        </Thumb>
                                    </Track.Thumb>
                                    <Track.IncreaseRepeatButton>
                                        <RepeatButton Command="ScrollBar.LineRightCommand" Background="#00FFFFFF">
                                            <RepeatButton.Style>
                                                <Style TargetType="{x:Type RepeatButton}">
                                                    <Setter Property="Template">
                                                        <Setter.Value>
                                                            <ControlTemplate>
                                                                <Rectangle Fill="{TemplateBinding Background}" />
                                                            </ControlTemplate>
                                                        </Setter.Value>
                                                    </Setter>
                                                </Style>
                                            </RepeatButton.Style>
                                        </RepeatButton>
                                    </Track.IncreaseRepeatButton>
                                </Track>
                                <RepeatButton Command="ScrollBar.LineRightCommand" Grid.Column="2">
                                    <RepeatButton.Style>
                                        <Style TargetType="{x:Type RepeatButton}">
                                            <Setter Property="Background" Value="White" />
                                            <Setter Property="Template">
                                                <Setter.Value>
                                                    <ControlTemplate>
                                                        <Grid>
                                                            <ed:RegularPolygon Fill="{TemplateBinding Background}" Height="7" InnerRadius="11" PointCount="3" Stretch="Fill" Width="7" RenderTransformOrigin="0.5,0.5">
                                                                <ed:RegularPolygon.RenderTransform>
                                                                    <TransformGroup>
                                                                        <ScaleTransform/>
                                                                        <SkewTransform/>
                                                                        <RotateTransform Angle="90"/>
                                                                        <TranslateTransform/>
                                                                    </TransformGroup>
                                                                </ed:RegularPolygon.RenderTransform>
                                                            </ed:RegularPolygon>
                                                        </Grid>
                                                    </ControlTemplate>
                                                </Setter.Value>
                                            </Setter>
                                            <Style.Triggers>
                                                <Trigger Property="IsMouseOver" Value="True">
                                                    <Setter Property="Background" Value="Gray" />
                                                </Trigger>
                                                <Trigger Property="IsPressed" Value="True">
                                                    <Setter Property="Background" Value="{StaticResource HighlightBrush}" />
                                                </Trigger>
                                            </Style.Triggers>
                                        </Style>
                                    </RepeatButton.Style>
                                </RepeatButton>
                            </Grid>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Trigger>
        </Style.Triggers>
    </Style>
    <Style TargetType="{x:Type ScrollViewer}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ScrollViewer}">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*" />
                            <ColumnDefinition Width="Auto" />
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="*" />
                            <RowDefinition Height="Auto" />
                        </Grid.RowDefinitions>
                        <ScrollBar Style="{StaticResource VerticalScrollBar}" x:Name="PART_VerticalScrollBar" Value="{TemplateBinding VerticalOffset}" Grid.Column="1" Maximum="{TemplateBinding ScrollableHeight}" ViewportSize="{TemplateBinding ViewportHeight}" Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}"/>
                        <ScrollBar Style="{StaticResource HorizontalScrollBar}" x:Name="PART_HorizontalScrollBar" Orientation="Horizontal" Grid.Row="1" Value="{TemplateBinding HorizontalOffset}" Maximum="{TemplateBinding ScrollableWidth}" ViewportSize="{TemplateBinding ViewportWidth}" Visibility="{TemplateBinding ComputedHorizontalScrollBarVisibility}"/>
                        <ScrollContentPresenter x:Name="PART_ScrollContentPresenter" />
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style TargetType="{x:Type TextBox}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TextBox}">
                    <Border Background="{TemplateBinding Background}" Width="{TemplateBinding Width}" Height="{TemplateBinding Height}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="5">
                        <ScrollViewer Background="{TemplateBinding Background}" FontFamily="{StaticResource ContentFontFamily}" x:Name="PART_ContentHost" />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="Background" Value="{StaticResource ComboBoxBrush}" />
        <Setter Property="BorderBrush" Value="{StaticResource ComboBoxBrush}" />
        <Setter Property="Foreground" Value="{StaticResource PageForegroundBrush}" />
        <Setter Property="Margin" Value="2" />
        <Setter Property="Height" Value="30" />
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="BorderBrush" Value="Gray" />
                <Setter Property="Background" Value="{StaticResource PageBackgroundBrush}" />
            </Trigger>
            <Trigger Property="IsFocused" Value="True">
                <Setter Property="BorderBrush" Value="{StaticResource HighlightBrush}" />
                <Setter Property="Background" Value="{StaticResource PageBackgroundBrush}" />
            </Trigger>
        </Style.Triggers>
    </Style>
    <Style TargetType="{x:Type ComboBox}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ComboBox}">
                    <Border BorderBrush="{TemplateBinding BorderBrush}">
                        <Grid Background="{TemplateBinding Background}">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*" />
                                <ColumnDefinition Width="Auto" />
                            </Grid.ColumnDefinitions>
                            <Popup x:Name="PART_ContentHost" SnapsToDevicePixels="True" MinWidth="{TemplateBinding ActualWidth}" MaxHeight="{TemplateBinding MaxDropDownHeight}"  Placement="Bottom" IsOpen="{TemplateBinding IsDropDownOpen}" AllowsTransparency="True">
                                <ScrollViewer>
                                    <StackPanel IsItemsHost="True"/>
                                </ScrollViewer>
                            </Popup>
                            <ToggleButton Grid.Column="2" x:Name="ToggleButton" Focusable="false" IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" ClickMode="Press">
                                <ToggleButton.Style>
                                    <Style TargetType="{x:Type ToggleButton}">
                                        <Setter Property="Template">
                                            <Setter.Value>
                                                <ControlTemplate TargetType="{x:Type ToggleButton}">
                                                    <Grid Background="{TemplateBinding Background}">
                                                        <VisualStateManager.VisualStateGroups>
                                                            <VisualStateGroup x:Name="CheckStates">
                                                                <VisualState x:Name="Checked">
                                                                    <Storyboard>
                                                                        <DoubleAnimation Duration="0:0:0.4" To="360" Storyboard.TargetName="arrowRotate" Storyboard.TargetProperty="Angle" />
                                                                    </Storyboard>
                                                                </VisualState>
                                                                <VisualState x:Name="Unchecked">
                                                                    <Storyboard>
                                                                        <DoubleAnimation Duration="0:0:0.4" To="180" Storyboard.TargetName="arrowRotate" Storyboard.TargetProperty="Angle" />
                                                                    </Storyboard>
                                                                </VisualState>
                                                            </VisualStateGroup>
                                                        </VisualStateManager.VisualStateGroups>
                                                        <ed:RegularPolygon Margin="10,0,10,0" x:Name="Arrow" HorizontalAlignment="Center" VerticalAlignment="Center" Height="10" Width="10" Grid.Column="1" Fill="{StaticResource PageBackgroundBrush}" InnerRadius="11" PointCount="3" Stretch="Fill" RenderTransformOrigin="0.5,0.5">
                                                            <ed:RegularPolygon.RenderTransform>
                                                                <RotateTransform x:Name="arrowRotate" Angle="180" />
                                                            </ed:RegularPolygon.RenderTransform>
                                                        </ed:RegularPolygon>
                                                    </Grid>
                                                </ControlTemplate>
                                            </Setter.Value>
                                        </Setter>
                                        <Setter Property="Background" Value="{StaticResource ComboBoxBrush}" />
                                        <Setter Property="Foreground" Value="{StaticResource PageBackgroundBrush}" />
                                    </Style>
                                </ToggleButton.Style>
                            </ToggleButton>
                            <ContentPresenter Margin="5,5,0,5" Grid.Column="0" x:Name="ContentSite" IsHitTestVisible="False" Content="{TemplateBinding SelectionBoxItem}" ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}" ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}" VerticalAlignment="Stretch" HorizontalAlignment="Left"/>
                            <TextBox x:Name="PART_EditableTextBox" HorizontalAlignment="Left" VerticalAlignment="Bottom" Focusable="True" Background="Transparent" Visibility="Hidden" IsReadOnly="{TemplateBinding IsReadOnly}">
                                <TextBox.Style>
                                    <Style TargetType="{x:Type TextBox}">
                                        <Setter Property="Template">
                                            <Setter.Value>
                                                <ControlTemplate TargetType="{x:Type TextBox}">
                                                    <Border x:Name="PART_ContentHost" Focusable="False" Background="{TemplateBinding Background}" />
                                                </ControlTemplate>
                                            </Setter.Value>
                                        </Setter>
                                    </Style>
                                </TextBox.Style>
                            </TextBox>
                        </Grid>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="Background" Value="{StaticResource ComboBoxBrush}" />
        <Setter Property="Foreground" Value="{StaticResource PageBackgroundBrush}" />
        <Setter Property="Margin" Value="2" />
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="BorderBrush" Value="Gray" />
            </Trigger>
            <Trigger Property="IsFocused" Value="True">
                <Setter Property="BorderBrush" Value="{StaticResource HighlightBrush}" />
            </Trigger>
        </Style.Triggers>
    </Style>
    <Style TargetType="{x:Type ComboBoxItem}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ComboBoxItem}">
                    <Border x:Name="Border" SnapsToDevicePixels="true" Background="{TemplateBinding Background}">
                        <ContentPresenter TextElement.Foreground="{TemplateBinding Foreground}" TextElement.FontFamily="{TemplateBinding FontFamily}" TextElement.FontSize="{TemplateBinding FontSize}" TextElement.FontStyle="{TemplateBinding FontStyle}" Margin="5" />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="Background" Value="{StaticResource ComboBoxBrush}" />
        <Setter Property="Foreground" Value="{StaticResource PageBackgroundBrush}" />
        <Style.Triggers>
            <Trigger Property="IsSelected" Value="True">
                <Setter Property="Background" Value="{StaticResource ComboBoxBrush}" />
                <Setter Property="Foreground" Value="{StaticResource PageBackgroundBrush}" />
            </Trigger>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{StaticResource HighlightBrush}" />
                <Setter Property="Foreground" Value="{StaticResource PageBackgroundBrush}" />
            </Trigger>
        </Style.Triggers>
    </Style>
    <Style TargetType="{x:Type ProgressBar}">
        <Setter Property="Height" Value="10" />
        <Setter Property="Foreground">
            <Setter.Value>
                <LinearGradientBrush StartPoint="0,0" EndPoint="0.1,1" SpreadMethod="Repeat">
                    <GradientStop Color="Gray" Offset="0" />
                    <GradientStop Color="#FF26A0DA" Offset="0" />
                    <GradientStop Color="#FF26A0DA" Offset="0.5" />
                    <GradientStop Color="Gray" Offset="0.5" />
                </LinearGradientBrush>
            </Setter.Value>
        </Setter>
        <Setter Property="Background" Value="Gray" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ProgressBar}">
                    <Grid>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Determinate" />
                                <VisualState x:Name="Indeterminate">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames RepeatBehavior="Forever" Duration="00:00:00.4"
                                                   Storyboard.TargetName="PART_Indicator"
                                                   Storyboard.TargetProperty="Fill">
                                            <DiscreteObjectKeyFrame KeyTime="00:00:00.2">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <LinearGradientBrush StartPoint="0,0" EndPoint="0.1,1" SpreadMethod="Repeat">
                                                        <GradientStop Color="Gray" Offset="0" />
                                                        <GradientStop Color="#FF26A0DA" Offset="0" />
                                                        <GradientStop Color="#FF26A0DA" Offset="0.5" />
                                                        <GradientStop Color="Gray" Offset="0.5" />
                                                    </LinearGradientBrush>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                            <DiscreteObjectKeyFrame KeyTime="00:00:00.2">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <LinearGradientBrush StartPoint="0,0" EndPoint="0.1,1" SpreadMethod="Repeat">
                                                        <GradientStop Color="Gray" Offset="0" />
                                                        <GradientStop Color="Gray" Offset="0.5" />
                                                        <GradientStop Color="#FF26A0DA" Offset="0.5" />
                                                        <GradientStop Color="#FF26A0DA" Offset="1" />
                                                    </LinearGradientBrush>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Rectangle x:Name="PART_Track" Fill="{TemplateBinding Background}" />
                        <Rectangle x:Name="PART_Indicator" Fill="{TemplateBinding Foreground}" />
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style TargetType="{x:Type TabControl}">
        <Setter Property="Background" Value="{x:Null}" />
        <Setter Property="BorderBrush" Value="{x:Null}" />
        <Setter Property="Margin" Value="120,0" />
    </Style>
    <Style TargetType="{x:Type TabItem}">
        <Setter Property="Background" Value="{x:Null}" />
        <Setter Property="BorderBrush" Value="{x:Null}" />
        <Setter Property="Foreground" Value="{StaticResource TabItemUnselectedBrush}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate>
                    <TextBlock Padding="10,0" Text="{TemplateBinding HeaderedContentControl.Header}" Foreground="{TemplateBinding Foreground}" Background="{TemplateBinding Background}" Style="{StaticResource DefaultFontStyle}" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsSelected" Value="True">
                <Setter Property="Foreground" Value="{StaticResource TabItemSelectedBrush}" />
            </Trigger>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Foreground" Value="{StaticResource TabItemMouseOverBrush}" />
            </Trigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsSelected" Value="True" />
                    <Condition Property="IsMouseOver" Value="True" />
                </MultiTrigger.Conditions>
                <Setter Property="Foreground" Value="{StaticResource TabItemSelectedBrush}" />
            </MultiTrigger>
        </Style.Triggers>
    </Style>

    <!-- Window CommandButtons -->
    <Style x:Key="CloseButtonStyle" TargetType="{x:Type Button}">
        <Setter Property="MinWidth" Value="20" />
        <Setter Property="Width" Value="20" />
        <Setter Property="Height" Value="20" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Canvas x:Name="BackButton">
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal">
                                    <Storyboard>
                                        <ColorAnimation Duration="0" To="White" Storyboard.TargetProperty="(SolidColorBrush.Color)" Storyboard.TargetName="backgroundColor1" />
                                        <ColorAnimation Duration="0" To="White" Storyboard.TargetProperty="(SolidColorBrush.Color)" Storyboard.TargetName="backgroundColor2" />
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="MouseOver">
                                    <Storyboard>
                                        <ColorAnimation Duration="0" To="Gray" Storyboard.TargetProperty="(SolidColorBrush.Color)" Storyboard.TargetName="backgroundColor1" />
                                        <ColorAnimation Duration="0" To="Gray" Storyboard.TargetProperty="(SolidColorBrush.Color)" Storyboard.TargetName="backgroundColor2" />
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Pressed"/>
                                <VisualState x:Name="Disabled">
                                    <Storyboard>
                                        <DoubleAnimation Duration="0" To="0.35" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="BackButton" />
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Rectangle Height="20" Canvas.Left="7" Width="5" RenderTransformOrigin="0.5,0.5" RadiusY="0" RadiusX="0">
                            <Rectangle.Fill>
                                <SolidColorBrush Color="White" x:Name="backgroundColor1" />
                            </Rectangle.Fill>
                            <Rectangle.RenderTransform>
                                <TransformGroup>
                                    <ScaleTransform/>
                                    <SkewTransform/>
                                    <RotateTransform Angle="-45"/>
                                    <TranslateTransform/>
                                </TransformGroup>
                            </Rectangle.RenderTransform>
                        </Rectangle>
                        <Rectangle Height="20" Canvas.Left="7" Width="5" RenderTransformOrigin="0.5,0.5" RadiusY="0" RadiusX="0">
                            <Rectangle.Fill>
                                <SolidColorBrush Color="White" x:Name="backgroundColor2" />
                            </Rectangle.Fill>
                            <Rectangle.RenderTransform>
                                <TransformGroup>
                                    <ScaleTransform/>
                                    <SkewTransform/>
                                    <RotateTransform Angle="45"/>
                                    <TranslateTransform/>
                                </TransformGroup>
                            </Rectangle.RenderTransform>
                        </Rectangle>
                    </Canvas>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="Margin" Value="0,10,10,0"/>
        <Setter Property="VerticalAlignment" Value="Top" />
        <Setter Property="HorizontalAlignment" Value="Right" />
    </Style>
    <Style x:Key="MinimizeButtonStyle" TargetType="{x:Type Button}">
        <Setter Property="MinWidth" Value="20" />
        <Setter Property="Width" Value="20" />
        <Setter Property="Height" Value="20" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Canvas x:Name="BackButton">
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal">
                                    <Storyboard>
                                        <ColorAnimation Duration="0" To="White" Storyboard.TargetProperty="(SolidColorBrush.Color)" Storyboard.TargetName="backgroundColor" />
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="MouseOver">
                                    <Storyboard>
                                        <ColorAnimation Duration="0" To="Gray" Storyboard.TargetProperty="(SolidColorBrush.Color)" Storyboard.TargetName="backgroundColor" />
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Pressed"/>
                                <VisualState x:Name="Disabled">
                                    <Storyboard>
                                        <DoubleAnimation Duration="0" To="0.35" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="BackButton" />
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Rectangle Height="20" Canvas.Left="7" Width="4" RenderTransformOrigin="0.5,0.5" RadiusY="0" RadiusX="0" Canvas.Top="3">
                            <Rectangle.Fill>
                                <SolidColorBrush Color="White" x:Name="backgroundColor" />
                            </Rectangle.Fill>
                            <Rectangle.RenderTransform>
                                <TransformGroup>
                                    <ScaleTransform/>
                                    <SkewTransform/>
                                    <RotateTransform Angle="90"/>
                                    <TranslateTransform/>
                                </TransformGroup>
                            </Rectangle.RenderTransform>
                        </Rectangle>
                    </Canvas>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="Margin" Value="0,10,10,0"/>
        <Setter Property="VerticalAlignment" Value="Top" />
        <Setter Property="HorizontalAlignment" Value="Right" />
    </Style>

    <!-- Title Styles -->
    <Style x:Key="BackButtonStyle" TargetType="{x:Type Button}">
        <Setter Property="MinWidth" Value="40" />
        <Setter Property="Width" Value="40" />
        <Setter Property="Height" Value="40" />
        <Setter Property="Margin" Value="40,0,40,40" />
        <Setter Property="VerticalAlignment" Value="Bottom" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Canvas x:Name="BackButton">
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal"/>
                                <VisualState x:Name="MouseOver">
                                    <Storyboard>
                                        <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="MouseOverEllipse" />
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Pressed">
                                    <Storyboard>
                                        <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="PressedEllipse" />
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Disabled">
                                    <Storyboard>
                                        <DoubleAnimation Duration="0" To="0.35" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="BackButton" />
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Ellipse x:Name="PressedEllipse" Fill="{StaticResource HighlightBrush}" Opacity="0" Width="40" Height="40"/>
                        <Ellipse x:Name="MouseOverEllipse" Fill="#7F8D8D8D" Opacity="0" Width="40" Height="40"/>
                        <Path Fill="White" Data="F1M20.2168,40C31.2608,40,40.2168,31.045,40.2168,20C40.2168,8.958,31.2608,0,20.2168,0C9.1708,0,0.216799999999999,8.958,0.216799999999999,20C0.216799999999999,31.045,9.1708,40,20.2168,40 M20.2168,37.161C10.7548,37.161,3.0578,29.462,3.0578,20C3.0578,10.538,10.7548,2.839,20.2168,2.839C29.6788,2.839,37.3758,10.538,37.3758,20C37.3758,29.462,29.6788,37.161,20.2168,37.161"/>
                        <Path Fill="White" Canvas.Left="9.269" Canvas.Top="12.263" Height="15.477" Width="20.928" Stretch="UniformToFill" Data="F1M16.5576,18.0596L22.7016,12.2626L17.7046,12.2626L9.4856,20.0176L17.6686,27.7396L22.6646,27.7396L16.5576,21.9766L30.4136,21.9766L30.4136,18.0596z"/>
                    </Canvas>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="AddButtonStyle" TargetType="{x:Type Button}">
        <Setter Property="MinWidth" Value="40" />
        <Setter Property="Width" Value="40" />
        <Setter Property="Height" Value="40" />
        <Setter Property="Margin" Value="10,0,10,0" />
        <Setter Property="VerticalAlignment" Value="Top" />
        <Setter Property="HorizontalAlignment" Value="Right" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Canvas x:Name="BackButton">
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal"/>
                                <VisualState x:Name="MouseOver">
                                    <Storyboard>
                                        <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="MouseOverEllipse" />
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Pressed">
                                    <Storyboard>
                                        <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="PressedEllipse" />
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Disabled">
                                    <Storyboard>
                                        <DoubleAnimation Duration="0" To="0.35" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="BackButton" />
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Ellipse x:Name="PressedEllipse" Fill="{StaticResource HighlightBrush}" Opacity="0" Width="40" Height="40"/>
                        <Ellipse x:Name="MouseOverEllipse" Fill="#7F8D8D8D" Opacity="0" Width="40" Height="40"/>
                        <Path Fill="White" Data="F1M20.2168,40C31.2608,40,40.2168,31.045,40.2168,20C40.2168,8.958,31.2608,0,20.2168,0C9.1708,0,0.216799999999999,8.958,0.216799999999999,20C0.216799999999999,31.045,9.1708,40,20.2168,40 M20.2168,37.161C10.7548,37.161,3.0578,29.462,3.0578,20C3.0578,10.538,10.7548,2.839,20.2168,2.839C29.6788,2.839,37.3758,10.538,37.3758,20C37.3758,29.462,29.6788,37.161,20.2168,37.161"/>
                        <Ellipse x:Name="PressedEllipse_Copy" Fill="{StaticResource HighlightBrush}" Opacity="0" Width="40" Height="40"/>
                        <Ellipse x:Name="MouseOverEllipse_Copy" Fill="#7F8D8D8D" Opacity="0" Width="40" Height="40"/>
                        <Path Fill="White" Data="F1M20.2168,40C31.2608,40,40.2168,31.045,40.2168,20C40.2168,8.958,31.2608,0,20.2168,0C9.1708,0,0.216799999999999,8.958,0.216799999999999,20C0.216799999999999,31.045,9.1708,40,20.2168,40 M20.2168,37.161C10.7548,37.161,3.0578,29.462,3.0578,20C3.0578,10.538,10.7548,2.839,20.2168,2.839C29.6788,2.839,37.3758,10.538,37.3758,20C37.3758,29.462,29.6788,37.161,20.2168,37.161"/>
                        <Rectangle Fill="White" Height="24" Canvas.Left="17.5" Canvas.Top="8" Width="5"/>
                        <Rectangle Fill="White" Height="24" Canvas.Left="17.625" Canvas.Top="8" Width="5" RenderTransformOrigin="0.5,0.5">
                            <Rectangle.RenderTransform>
                                <TransformGroup>
                                    <ScaleTransform/>
                                    <SkewTransform/>
                                    <RotateTransform Angle="90"/>
                                    <TranslateTransform/>
                                </TransformGroup>
                            </Rectangle.RenderTransform>
                        </Rectangle>
                    </Canvas>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="DeleteButtonStyle" TargetType="{x:Type Button}">
        <Setter Property="MinWidth" Value="40" />
        <Setter Property="Width" Value="40" />
        <Setter Property="Height" Value="40" />
        <Setter Property="Margin" Value="10,0,10,0" />
        <Setter Property="VerticalAlignment" Value="Top" />
        <Setter Property="HorizontalAlignment" Value="Right" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Canvas x:Name="BackButton">
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal"/>
                                <VisualState x:Name="MouseOver">
                                    <Storyboard>
                                        <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="MouseOverEllipse" />
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Pressed">
                                    <Storyboard>
                                        <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="PressedEllipse" />
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Disabled">
                                    <Storyboard>
                                        <DoubleAnimation Duration="0" To="0.35" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="BackButton" />
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Ellipse x:Name="PressedEllipse" Fill="{StaticResource HighlightBrush}" Opacity="0" Width="40" Height="40"/>
                        <Ellipse x:Name="MouseOverEllipse" Fill="#7F8D8D8D" Opacity="0" Width="40" Height="40"/>
                        <Path Fill="White" Data="F1M20.2168,40C31.2608,40,40.2168,31.045,40.2168,20C40.2168,8.958,31.2608,0,20.2168,0C9.1708,0,0.216799999999999,8.958,0.216799999999999,20C0.216799999999999,31.045,9.1708,40,20.2168,40 M20.2168,37.161C10.7548,37.161,3.0578,29.462,3.0578,20C3.0578,10.538,10.7548,2.839,20.2168,2.839C29.6788,2.839,37.3758,10.538,37.3758,20C37.3758,29.462,29.6788,37.161,20.2168,37.161"/>
                        <Ellipse x:Name="PressedEllipse_Copy" Fill="{StaticResource HighlightBrush}" Opacity="0" Width="40" Height="40"/>
                        <Ellipse x:Name="MouseOverEllipse_Copy" Fill="#7F8D8D8D" Opacity="0" Width="40" Height="40"/>
                        <Path Fill="White" Data="F1M20.2168,40C31.2608,40,40.2168,31.045,40.2168,20C40.2168,8.958,31.2608,0,20.2168,0C9.1708,0,0.216799999999999,8.958,0.216799999999999,20C0.216799999999999,31.045,9.1708,40,20.2168,40 M20.2168,37.161C10.7548,37.161,3.0578,29.462,3.0578,20C3.0578,10.538,10.7548,2.839,20.2168,2.839C29.6788,2.839,37.3758,10.538,37.3758,20C37.3758,29.462,29.6788,37.161,20.2168,37.161"/>
                        <Rectangle Fill="White" Height="24" Canvas.Left="17.625" Canvas.Top="8" Width="5" RenderTransformOrigin="0.5,0.5">
                            <Rectangle.RenderTransform>
                                <TransformGroup>
                                    <ScaleTransform/>
                                    <SkewTransform/>
                                    <RotateTransform Angle="90"/>
                                    <TranslateTransform/>
                                </TransformGroup>
                            </Rectangle.RenderTransform>
                        </Rectangle>
                    </Canvas>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="EditButtonStyle" TargetType="{x:Type Button}">
        <Setter Property="MinWidth" Value="40" />
        <Setter Property="Width" Value="40" />
        <Setter Property="Height" Value="40" />
        <Setter Property="Margin" Value="10,0,10,0" />
        <Setter Property="VerticalAlignment" Value="Top" />
        <Setter Property="HorizontalAlignment" Value="Right" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Canvas x:Name="BackButton">
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal"/>
                                <VisualState x:Name="MouseOver">
                                    <Storyboard>
                                        <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="MouseOverEllipse" />
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Pressed">
                                    <Storyboard>
                                        <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="PressedEllipse" />
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Disabled">
                                    <Storyboard>
                                        <DoubleAnimation Duration="0" To="0.35" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="BackButton" />
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Ellipse x:Name="PressedEllipse" Fill="{StaticResource HighlightBrush}" Opacity="0" Width="40" Height="40"/>
                        <Ellipse x:Name="MouseOverEllipse" Fill="#7F8D8D8D" Opacity="0" Width="40" Height="40"/>
                        <Path Fill="White" Data="F1M20.2168,40C31.2608,40,40.2168,31.045,40.2168,20C40.2168,8.958,31.2608,0,20.2168,0C9.1708,0,0.216799999999999,8.958,0.216799999999999,20C0.216799999999999,31.045,9.1708,40,20.2168,40 M20.2168,37.161C10.7548,37.161,3.0578,29.462,3.0578,20C3.0578,10.538,10.7548,2.839,20.2168,2.839C29.6788,2.839,37.3758,10.538,37.3758,20C37.3758,29.462,29.6788,37.161,20.2168,37.161"/>
                        <Ellipse x:Name="PressedEllipse_Copy" Fill="{StaticResource HighlightBrush}" Opacity="0" Width="40" Height="40"/>
                        <Ellipse x:Name="MouseOverEllipse_Copy" Fill="#7F8D8D8D" Opacity="0" Width="40" Height="40"/>
                        <Path Fill="White" Data="F1M20.2168,40C31.2608,40,40.2168,31.045,40.2168,20C40.2168,8.958,31.2608,0,20.2168,0C9.1708,0,0.216799999999999,8.958,0.216799999999999,20C0.216799999999999,31.045,9.1708,40,20.2168,40 M20.2168,37.161C10.7548,37.161,3.0578,29.462,3.0578,20C3.0578,10.538,10.7548,2.839,20.2168,2.839C29.6788,2.839,37.3758,10.538,37.3758,20C37.3758,29.462,29.6788,37.161,20.2168,37.161"/>
                        <Canvas Height="15.618" Canvas.Left="9.627" Canvas.Top="11.876" Width="18.478" RenderTransformOrigin="0.5,0.5">
                            <Canvas.RenderTransform>
                                <TransformGroup>
                                    <ScaleTransform/>
                                    <SkewTransform/>
                                    <RotateTransform Angle="-45"/>
                                    <TranslateTransform/>
                                </TransformGroup>
                            </Canvas.RenderTransform>
                            <Rectangle Fill="White" Height="15.618" Canvas.Left="13.478" Width="5" RenderTransformOrigin="0.5,0.5">
                                <Rectangle.RenderTransform>
                                    <TransformGroup>
                                        <ScaleTransform/>
                                        <SkewTransform/>
                                        <RotateTransform Angle="90"/>
                                        <TranslateTransform/>
                                    </TransformGroup>
                                </Rectangle.RenderTransform>
                            </Rectangle>
                            <ed:RegularPolygon Height="10" InnerRadius="1" Canvas.Left="0.726" PointCount="3" StrokeStartLineCap="Triangle" Stretch="Fill" StrokeEndLineCap="Triangle" Stroke="White" StrokeLineJoin="Miter" Canvas.Top="2.806" Width="4.854" RenderTransformOrigin="0.5,0.5" StrokeThickness="0.5">
                                <ed:RegularPolygon.RenderTransform>
                                    <TransformGroup>
                                        <ScaleTransform/>
                                        <SkewTransform/>
                                        <RotateTransform Angle="-90"/>
                                        <TranslateTransform/>
                                    </TransformGroup>
                                </ed:RegularPolygon.RenderTransform>
                            </ed:RegularPolygon>
                            <ed:Arc ArcThickness="0" ArcThicknessUnit="Pixel" EndAngle="180" Height="2" Canvas.Left="3.79" StrokeStartLineCap="Triangle" Stretch="None" StrokeEndLineCap="Triangle" Stroke="White" StrokeThickness="0.5" StrokeLineJoin="Miter" StartAngle="0" Canvas.Top="6.806" Width="1" RenderTransformOrigin="0.834,0.447">
                                <ed:Arc.RenderTransform>
                                    <TransformGroup>
                                        <ScaleTransform/>
                                        <SkewTransform AngleY="1.813"/>
                                        <RotateTransform/>
                                        <TranslateTransform Y="0.012"/>
                                    </TransformGroup>
                                </ed:Arc.RenderTransform>
                            </ed:Arc>
                            <ed:Arc ArcThickness="0" ArcThicknessUnit="Pixel" EndAngle="180" Height="3" Canvas.Left="5.821" StrokeStartLineCap="Triangle" Stretch="None" StrokeEndLineCap="Triangle" Stroke="White" StrokeThickness="0.5" StrokeLineJoin="Miter" StartAngle="0" Canvas.Top="6.353" Width="1.5" RenderTransformOrigin="0.834,0.447" StrokeDashCap="Round">
                                <ed:Arc.RenderTransform>
                                    <TransformGroup>
                                        <ScaleTransform/>
                                        <SkewTransform AngleY="1.813"/>
                                        <RotateTransform/>
                                        <TranslateTransform Y="0.012"/>
                                    </TransformGroup>
                                </ed:Arc.RenderTransform>
                            </ed:Arc>
                            <ed:Arc ArcThickness="0" ArcThicknessUnit="Pixel" EndAngle="180" Height="2.5" Canvas.Left="4.79" StrokeStartLineCap="Triangle" Stretch="None" StrokeEndLineCap="Triangle" Stroke="White" StrokeThickness="0.5" StrokeLineJoin="Miter" StartAngle="0" Canvas.Top="6.572" Width="1.25" RenderTransformOrigin="0.834,0.447">
                                <ed:Arc.RenderTransform>
                                    <TransformGroup>
                                        <ScaleTransform/>
                                        <SkewTransform AngleY="1.813"/>
                                        <RotateTransform/>
                                        <TranslateTransform Y="0.012"/>
                                    </TransformGroup>
                                </ed:Arc.RenderTransform>
                            </ed:Arc>
                            <ed:Arc ArcThickness="0" ArcThicknessUnit="Pixel" EndAngle="180" Height="2" Canvas.Left="1.337" StrokeStartLineCap="Triangle" Stretch="None" StrokeEndLineCap="Triangle" Stroke="White" StrokeThickness="0.5" StrokeLineJoin="Miter" StartAngle="0" Canvas.Top="6.79" Width="1" RenderTransformOrigin="0.834,0.447">
                                <ed:Arc.RenderTransform>
                                    <TransformGroup>
                                        <ScaleTransform/>
                                        <SkewTransform AngleY="1.813"/>
                                        <RotateTransform/>
                                        <TranslateTransform Y="0.012"/>
                                    </TransformGroup>
                                </ed:Arc.RenderTransform>
                            </ed:Arc>
                            <ed:RegularPolygon Height="2.545" Fill="White" InnerRadius="1" PointCount="3" StrokeStartLineCap="Triangle" Stretch="Fill" StrokeEndLineCap="Triangle" Stroke="White" StrokeThickness="0.5" StrokeLineJoin="Miter" Canvas.Top="6.565" Width="1.392" RenderTransformOrigin="0.5,0.5">
                                <ed:RegularPolygon.RenderTransform>
                                    <TransformGroup>
                                        <ScaleTransform/>
                                        <SkewTransform/>
                                        <RotateTransform Angle="-90"/>
                                        <TranslateTransform/>
                                    </TransformGroup>
                                </ed:RegularPolygon.RenderTransform>
                            </ed:RegularPolygon>
                        </Canvas>
                    </Canvas>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--Mediaplayer Buttons-->
    <Style x:Key="PlayButtonStyle" TargetType="{x:Type Button}">
        <Setter Property="MinWidth" Value="24" />
        <Setter Property="Width" Value="24" />
        <Setter Property="Height" Value="24" />
        <Setter Property="Margin" Value="10,0,10,0" />
        <Setter Property="VerticalAlignment" Value="Top" />
        <Setter Property="HorizontalAlignment" Value="Right" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Canvas x:Name="PlayButton">
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal"/>
                                <VisualState x:Name="MouseOver">
                                    <Storyboard>
                                        <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="MouseOverEllipse" />
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Pressed">
                                    <Storyboard>
                                        <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="PressedEllipse" />
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Disabled">
                                    <Storyboard>
                                        <DoubleAnimation Duration="0" To="0.35" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="PlayButton" />
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Ellipse x:Name="PressedEllipse" Fill="{StaticResource HighlightBrush}" Opacity="0" Width="24" Height="24"/>
                        <Ellipse x:Name="MouseOverEllipse" Fill="#7F8D8D8D" Opacity="0" Width="24" Height="24"/>
                        <Path Fill="White" Data="F1M20.2168,40C31.2608,40,40.2168,31.045,40.2168,20C40.2168,8.958,31.2608,0,20.2168,0C9.1708,0,0.216799999999999,8.958,0.216799999999999,20C0.216799999999999,31.045,9.1708,40,20.2168,40 M20.2168,37.161C10.7548,37.161,3.0578,29.462,3.0578,20C3.0578,10.538,10.7548,2.839,20.2168,2.839C29.6788,2.839,37.3758,10.538,37.3758,20C37.3758,29.462,29.6788,37.161,20.2168,37.161" Height="24" Stretch="Fill" Width="24"/>
                        <Ellipse x:Name="PressedEllipse_Copy" Fill="{StaticResource HighlightBrush}" Opacity="0" Width="24" Height="24"/>
                        <Ellipse x:Name="MouseOverEllipse_Copy" Fill="#7F8D8D8D" Opacity="0" Width="24" Height="24"/>
                        <Path Fill="White" Data="F1M20.2168,40C31.2608,40,40.2168,31.045,40.2168,20C40.2168,8.958,31.2608,0,20.2168,0C9.1708,0,0.216799999999999,8.958,0.216799999999999,20C0.216799999999999,31.045,9.1708,40,20.2168,40 M20.2168,37.161C10.7548,37.161,3.0578,29.462,3.0578,20C3.0578,10.538,10.7548,2.839,20.2168,2.839C29.6788,2.839,37.3758,10.538,37.3758,20C37.3758,29.462,29.6788,37.161,20.2168,37.161" Height="24" Stretch="Fill" Width="24"/>
                        <ed:RegularPolygon Fill="White" Height="10" InnerRadius="1" Canvas.Left="8" PointCount="3" Stretch="Fill" Canvas.Top="7" Width="10" RenderTransformOrigin="0.5,0.5">
                            <ed:RegularPolygon.RenderTransform>
                                <TransformGroup>
                                    <ScaleTransform/>
                                    <SkewTransform/>
                                    <RotateTransform Angle="90"/>
                                    <TranslateTransform/>
                                </TransformGroup>
                            </ed:RegularPolygon.RenderTransform>
                        </ed:RegularPolygon>
                    </Canvas>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="PauseButtonStyle" TargetType="{x:Type Button}">
        <Setter Property="MinWidth" Value="24" />
        <Setter Property="Width" Value="24" />
        <Setter Property="Height" Value="24" />
        <Setter Property="Margin" Value="10,0,10,0" />
        <Setter Property="VerticalAlignment" Value="Top" />
        <Setter Property="HorizontalAlignment" Value="Right" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Canvas x:Name="PlayButton">
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal"/>
                                <VisualState x:Name="MouseOver">
                                    <Storyboard>
                                        <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="MouseOverEllipse" />
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Pressed">
                                    <Storyboard>
                                        <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="PressedEllipse" />
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Disabled">
                                    <Storyboard>
                                        <DoubleAnimation Duration="0" To="0.35" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="PlayButton" />
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Ellipse x:Name="PressedEllipse" Fill="{StaticResource HighlightBrush}" Opacity="0" Width="24" Height="24"/>
                        <Ellipse x:Name="MouseOverEllipse" Fill="#7F8D8D8D" Opacity="0" Width="24" Height="24"/>
                        <Path Fill="White" Data="F1M20.2168,40C31.2608,40,40.2168,31.045,40.2168,20C40.2168,8.958,31.2608,0,20.2168,0C9.1708,0,0.216799999999999,8.958,0.216799999999999,20C0.216799999999999,31.045,9.1708,40,20.2168,40 M20.2168,37.161C10.7548,37.161,3.0578,29.462,3.0578,20C3.0578,10.538,10.7548,2.839,20.2168,2.839C29.6788,2.839,37.3758,10.538,37.3758,20C37.3758,29.462,29.6788,37.161,20.2168,37.161" Height="24" Stretch="Fill" Width="24"/>
                        <Ellipse x:Name="PressedEllipse_Copy" Fill="{StaticResource HighlightBrush}" Opacity="0" Width="24" Height="24"/>
                        <Ellipse x:Name="MouseOverEllipse_Copy" Fill="#7F8D8D8D" Opacity="0" Width="24" Height="24"/>
                        <Path Fill="White" Data="F1M20.2168,40C31.2608,40,40.2168,31.045,40.2168,20C40.2168,8.958,31.2608,0,20.2168,0C9.1708,0,0.216799999999999,8.958,0.216799999999999,20C0.216799999999999,31.045,9.1708,40,20.2168,40 M20.2168,37.161C10.7548,37.161,3.0578,29.462,3.0578,20C3.0578,10.538,10.7548,2.839,20.2168,2.839C29.6788,2.839,37.3758,10.538,37.3758,20C37.3758,29.462,29.6788,37.161,20.2168,37.161" Height="24" Stretch="Fill" Width="24"/>
                        <Rectangle Fill="White" Height="10" Canvas.Left="6" Canvas.Top="7" Width="4" RenderTransformOrigin="0.5,0.5" />
                        <Rectangle Fill="White" Height="10" Canvas.Left="14" Canvas.Top="7" Width="4" RenderTransformOrigin="0.5,0.5" />
                    </Canvas>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="StopButtonStyle" TargetType="{x:Type Button}">
        <Setter Property="MinWidth" Value="24" />
        <Setter Property="Width" Value="24" />
        <Setter Property="Height" Value="24" />
        <Setter Property="Margin" Value="10,0,10,0" />
        <Setter Property="VerticalAlignment" Value="Top" />
        <Setter Property="HorizontalAlignment" Value="Right" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Canvas x:Name="PlayButton">
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal"/>
                                <VisualState x:Name="MouseOver">
                                    <Storyboard>
                                        <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="MouseOverEllipse" />
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Pressed">
                                    <Storyboard>
                                        <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="PressedEllipse" />
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Disabled">
                                    <Storyboard>
                                        <DoubleAnimation Duration="0" To="0.35" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="PlayButton" />
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Ellipse x:Name="PressedEllipse" Fill="{StaticResource HighlightBrush}" Opacity="0" Width="24" Height="24"/>
                        <Ellipse x:Name="MouseOverEllipse" Fill="#7F8D8D8D" Opacity="0" Width="24" Height="24"/>
                        <Path Fill="White" Data="F1M20.2168,40C31.2608,40,40.2168,31.045,40.2168,20C40.2168,8.958,31.2608,0,20.2168,0C9.1708,0,0.216799999999999,8.958,0.216799999999999,20C0.216799999999999,31.045,9.1708,40,20.2168,40 M20.2168,37.161C10.7548,37.161,3.0578,29.462,3.0578,20C3.0578,10.538,10.7548,2.839,20.2168,2.839C29.6788,2.839,37.3758,10.538,37.3758,20C37.3758,29.462,29.6788,37.161,20.2168,37.161" Height="24" Stretch="Fill" Width="24"/>
                        <Ellipse x:Name="PressedEllipse_Copy" Fill="{StaticResource HighlightBrush}" Opacity="0" Width="24" Height="24"/>
                        <Ellipse x:Name="MouseOverEllipse_Copy" Fill="#7F8D8D8D" Opacity="0" Width="24" Height="24"/>
                        <Path Fill="White" Data="F1M20.2168,40C31.2608,40,40.2168,31.045,40.2168,20C40.2168,8.958,31.2608,0,20.2168,0C9.1708,0,0.216799999999999,8.958,0.216799999999999,20C0.216799999999999,31.045,9.1708,40,20.2168,40 M20.2168,37.161C10.7548,37.161,3.0578,29.462,3.0578,20C3.0578,10.538,10.7548,2.839,20.2168,2.839C29.6788,2.839,37.3758,10.538,37.3758,20C37.3758,29.462,29.6788,37.161,20.2168,37.161" Height="24" Stretch="Fill" Width="24"/>
                        <Rectangle Fill="White" Height="10" Canvas.Left="7" Canvas.Top="7" Width="10" RenderTransformOrigin="0.5,0.5" />
                    </Canvas>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- Since the render transformation affects appearance but not layout, the snapped back button
              still occupies a 40 pixel square despite displaying as 26 pixels square.  All margin values
              are adjusted to account for the extra 7 pixel boundary. -->
    <Style x:Key="SnapBackButtonStyle" TargetType="{x:Type Button}" BasedOn="{StaticResource BackButtonStyle}">
        <Setter Property="Margin" Value="5,0,5,33" />
        <Setter Property="RenderTransformOrigin" Value="0.5,0.5" />
        <Setter Property="RenderTransform">
            <Setter.Value>
                <ScaleTransform ScaleX="0.65" ScaleY="0.65" />
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="PageTitleStyle" TargetType="{x:Type TextBlock}" BasedOn="{StaticResource DefaultFontStyle}">
        <Setter Property="Margin" Value="0,0,40,28" />
        <Setter Property="VerticalAlignment" Value="Bottom" />
        <Setter Property="TextWrapping" Value="NoWrap"/>
        <Setter Property="FontSize" Value="53.333"/>
    </Style>
    <Style x:Key="SnapPageTitleStyle" TargetType="{x:Type TextBlock}" BasedOn="{StaticResource PageTitleStyle}">
        <Setter Property="Margin" Value="0,0,12,33" />
        <Setter Property="FontSize" Value="26.667"/>
    </Style>

    <!-- Item Layout and Text Styles -->
    <Style x:Key="ImagePlaceHolderStyle" TargetType="{x:Type Border}">
        <Setter Property="Background" Value="{StaticResource PlaceholderImageBrush}"/>
        <Setter Property="HorizontalAlignment" Value="Stretch"/>
        <Setter Property="VerticalAlignment" Value="Stretch"/>
    </Style>
    <Style x:Key="ItemStackPanelStyle" TargetType="{x:Type StackPanel}">
        <Setter Property="VerticalAlignment" Value="Top"/>
        <Setter Property="Margin" Value="0,8,0,0"/>
    </Style>
    <Style x:Key="NonWrappingSmallContentTextStyle" TargetType="{x:Type TextBlock}">
        <Setter Property="Foreground" Value="#FFFFFFFF"/>
        <Setter Property="FontSize" Value="14.667"/>
        <Setter Property="FontFamily" Value="{StaticResource ContentFontFamily}"/>
        <Setter Property="HorizontalAlignment" Value="Left"/>
        <Setter Property="VerticalAlignment" Value="Top"/>
        <Setter Property="TextWrapping" Value="NoWrap"/>
        <Setter Property="TextTrimming" Value="WordEllipsis"/>
    </Style>
    <Style x:Key="SmallContentTextStyle" TargetType="{x:Type TextBlock}">
        <Setter Property="Foreground" Value="#FFFFFFFF"/>
        <Setter Property="FontSize" Value="14.667"/>
        <Setter Property="FontFamily" Value="{StaticResource ContentFontFamily}"/>
        <Setter Property="HorizontalAlignment" Value="Left"/>
        <Setter Property="VerticalAlignment" Value="Top"/>
        <Setter Property="TextWrapping" Value="Wrap"/>
        <Setter Property="TextTrimming" Value="WordEllipsis"/>
    </Style>
    <Style x:Key="OverlayStackPanelStyle" TargetType="{x:Type StackPanel}">
        <Setter Property="VerticalAlignment" Value="Bottom"/>
        <Setter Property="Margin" Value="0,8,0,0"/>
        <Setter Property="Background" Value="#A5000000"/>
    </Style>
    <Style x:Key="SubHeaderTextStyle" TargetType="{x:Type TextBlock}">
        <Setter Property="Foreground" Value="#FFFFFFFF"/>
        <Setter Property="FontFamily" Value="{StaticResource ContentFontFamily}"/>
        <Setter Property="HorizontalAlignment" Value="Left"/>
        <Setter Property="VerticalAlignment" Value="Top"/>
        <Setter Property="TextWrapping" Value="NoWrap"/>
        <Setter Property="TextTrimming" Value="WordEllipsis"/>
        <Setter Property="FontSize" Value="12"/>
    </Style>

    <!-- Temporary: Item container styles - to be deleted since an up to date version of these styles will be in generic.xaml -->
    <Style x:Key="GridTileStyle"  TargetType="{x:Type ListViewItem}">
        <Setter Property="FontFamily" Value="Segoe UI" />
        <Setter Property="Foreground" Value="White" />
        <Setter Property="Height" Value="Auto" />
        <Setter Property="Width" Value="Auto" />
        <Setter Property="Padding" Value="0" />
        <Setter Property="Margin" Value="0,0,8,8" />
        <Setter Property="HorizontalContentAlignment" Value="Left" />
        <Setter Property="VerticalContentAlignment" Value="Bottom" />
        <Setter Property="BorderThickness" Value="0"/>
        <!--<Setter Property="TabNavigation" Value="Local" />-->
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ListViewItem}">
                    <Grid Background="{TemplateBinding Background}">
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal" />
                                <VisualState x:Name="MouseOver">
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="MouseOverVisual" Storyboard.TargetProperty="Opacity" Duration="0" To="1"/>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Disabled">
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="Contentpresenter" Storyboard.TargetProperty="Opacity" Duration="0" To=".55" />
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="SelectionStates">
                                <VisualState x:Name="Unselected" />
                                <VisualState x:Name="Selected">
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="SelectedVisual" Storyboard.TargetProperty="Opacity" Duration="0" To="1"/>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="FocusStates">
                                <VisualState x:Name="Focused">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="FocusVisualElement" Storyboard.TargetProperty="Visibility" Duration="0">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Unfocused"/>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <ContentPresenter
                      x:Name="Contentpresenter"
                      Content="{TemplateBinding Content}"
                      ContentTemplate="{TemplateBinding ContentTemplate}"
                      HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                      Margin="{TemplateBinding Padding}"/>
                        <Rectangle x:Name="FocusVisualElement" Stroke="White" StrokeThickness="3" Visibility="Collapsed" />
                        <Rectangle x:Name="SelectedVisual" StrokeThickness="4" Opacity="0" Stroke="{StaticResource HighlightBrush}" IsHitTestVisible="False"  />
                        <Rectangle x:Name="MouseOverVisual"  StrokeThickness="4" Opacity="0" Stroke="DarkGray" IsHitTestVisible="False"  />
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="ListTileStyle" TargetType="{x:Type ListViewItem}">
        <Setter Property="FontFamily" Value="Segoe UI" />
        <Setter Property="Foreground" Value="White" />
        <Setter Property="Height" Value="Auto" />
        <Setter Property="Width" Value="Auto" />
        <Setter Property="Padding" Value="0" />
        <Setter Property="Margin" Value="0" />
        <Setter Property="HorizontalContentAlignment" Value="Left" />
        <Setter Property="VerticalContentAlignment" Value="Top" />
        <Setter Property="BorderThickness" Value="0"/>
        <!--<Setter Property="TabNavigation" Value="Local" />-->
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ListViewItem}">
                    <Grid Background="{TemplateBinding Background}">
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal" />
                                <VisualState x:Name="MouseOver">
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="MouseOverVisual" Storyboard.TargetProperty="Opacity" Duration="0" To="1"/>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Disabled">
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="Contentpresenter" Storyboard.TargetProperty="Opacity" Duration="0" To=".55" />
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="SelectionStates">
                                <VisualState x:Name="Unselected" />
                                <VisualState x:Name="Selected">
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="SelectedVisual" Storyboard.TargetProperty="Opacity" Duration="0" To="1"/>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="FocusStates">
                                <VisualState x:Name="Focused">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="FocusVisualElement" Storyboard.TargetProperty="Visibility" Duration="0">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Unfocused"/>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Rectangle x:Name="FocusVisualElement" Stroke="White" StrokeThickness="3" Visibility="Collapsed" />
                        <Rectangle x:Name="SelectedVisual" StrokeThickness="0" Opacity="0" Stroke="{StaticResource HighlightBrush}" Fill="{StaticResource HighlightBrush}" IsHitTestVisible="False"  />
                        <Rectangle x:Name="MouseOverVisual"  StrokeThickness="0" Opacity="0" Stroke="#FF353535" Fill="#FF353535" IsHitTestVisible="False"  />
                        <ContentPresenter
                      x:Name="Contentpresenter"
                      Content="{TemplateBinding Content}"
                      ContentTemplate="{TemplateBinding ContentTemplate}"
                      HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                      Margin="{TemplateBinding Padding}"/>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--
      Item Templates
      
      Data-bound presentation of an individual item in an appropriate style.  External
      margins should be avoided on any sides where alignment with other elements is a
      consideration.
    -->

    <DataTemplate x:Key="GenreTemplate">
        <Grid HorizontalAlignment="Left" Width="252" Height="252">
            <Border Style="{StaticResource ImagePlaceHolderStyle}" >
                <Image Source="{Binding Bild}" Margin="0" Stretch="UniformToFill"/>
            </Border>
            <StackPanel Grid.Column="1" Style="{StaticResource OverlayStackPanelStyle}">
                <TextBlock TextWrapping="Wrap" Text="{Binding Name}" Style="{StaticResource NonWrappingSmallContentTextStyle}" Margin="12,8,12,2" HorizontalAlignment="Stretch" Foreground="{StaticResource ControlTextColor}" Height="60"/>
            </StackPanel>
        </Grid>
    </DataTemplate>
    <DataTemplate x:Key="MovieTemplate">
        <Grid HorizontalAlignment="Left" Width="252" Height="252">
            <Border Style="{StaticResource ImagePlaceHolderStyle}" >
                <Image Source="{Binding Bild}" Margin="0" Stretch="UniformToFill"/>
            </Border>
            <StackPanel Grid.Column="1" Style="{StaticResource OverlayStackPanelStyle}">
                <TextBlock TextWrapping="Wrap" Text="{Binding Titel}" Style="{StaticResource NonWrappingSmallContentTextStyle}" Margin="12,8,12,2" HorizontalAlignment="Stretch" Foreground="{StaticResource ControlTextColor}" Height="60"/>
            </StackPanel>
        </Grid>
    </DataTemplate>
    <DataTemplate x:Key="PortraitListItemTemplate">
        <Grid HorizontalAlignment="Stretch" Width="390" Height="132" Margin="0,0,0,0">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition Width="*"/>
            </Grid.ColumnDefinitions>
            <Border Style="{StaticResource ImagePlaceHolderStyle}" Margin="8,8,0,8" Width="116" Height="116" HorizontalAlignment="Left" VerticalAlignment="Top">
                <Image Source="{Binding Bild}" Margin="0" Stretch="UniformToFill"/>
            </Border>
            <StackPanel Grid.Column="1" Style="{StaticResource ItemStackPanelStyle}" HorizontalAlignment="Left" Margin="12,8,0,0">
                <TextBlock TextTrimming="WordEllipsis" Text="{Binding Titel}" Style="{StaticResource NonWrappingSmallContentTextStyle}" Height="20"/>
                <TextBlock Text="{Binding Inhalt}" TextWrapping="WrapWithOverflow" TextTrimming="WordEllipsis" Style="{StaticResource ReadingFontStyle}" Height="64"/>
            </StackPanel>
        </Grid>
    </DataTemplate>
    <DataTemplate x:Key="SnapListItemTemplate">
        <Grid HorizontalAlignment="Left" Width="290" Height="60">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition Width="*"/>
            </Grid.ColumnDefinitions>
            <Border Style="{StaticResource ImagePlaceHolderStyle}" Margin="8,8,0,8" Width="44" Height="44" HorizontalAlignment="Left" VerticalAlignment="Top">
                <Image Source="{Binding Image}" Margin="0" Stretch="UniformToFill"/>
            </Border>
            <StackPanel Grid.Column="1" Style="{StaticResource ItemStackPanelStyle}" HorizontalAlignment="Left" Margin="12,6,0,0">
                <TextBlock TextWrapping="Wrap" Text="{Binding Title}" Style="{StaticResource NonWrappingSmallContentTextStyle}" Width="200" Height="20"/>
            </StackPanel>
        </Grid>
    </DataTemplate>

    <!--
      Items Panels

      Provide layout characteristics for item ListView and GridView collections.
    -->

    <ItemsPanelTemplate x:Key="GridItemsPanelTemplate">
        <WrapPanel />
    </ItemsPanelTemplate>
    <ItemsPanelTemplate x:Key="PortraitListItemsPanelTemplate">
        <VirtualizingStackPanel VirtualizingStackPanel.VirtualizationMode="Recycling" Margin="60,0,0,0"/>
    </ItemsPanelTemplate>
    <ItemsPanelTemplate x:Key="SnapListItemsPanelTemplate">
        <VirtualizingStackPanel VirtualizingStackPanel.VirtualizationMode="Recycling" Margin="20,0" Width="320"/>
    </ItemsPanelTemplate>
    <ItemsPanelTemplate x:Key="FillListItemsPanelTemplate">
        <VirtualizingStackPanel VirtualizingStackPanel.VirtualizationMode="Recycling" Margin="120,0,20,0" Width="416"/>
    </ItemsPanelTemplate>
</ResourceDictionary>